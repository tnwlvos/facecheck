{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Videos\\\\react\\\\my-app\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCSRFToken = () => {\n  const cookies = document.cookie.split(';');\n  for (let cookie of cookies) {\n    const [key, value] = cookie.trim().split('=');\n    if (key === 'csrftoken') return value;\n  }\n  return null;\n};\nconst Dashboard = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch student data\n  const fetchStudents = async () => {\n    const token = localStorage.getItem('access_token'); // 토큰 가져오기\n    if (!token) {\n      console.error('Access token not found.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.get('http://localhost:8000/api/dashboard/', {\n        headers: {\n          Authorization: `Bearer ${token}` // 요청 시 토큰 추가\n        }\n      });\n      setStudents(response.data);\n    } catch (error) {\n      console.error('Error fetching students:', error);\n      alert('학생 데이터를 불러오는 데 실패했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  // Handle file upload\n  const handleFileUpload = async () => {\n    if (!file) {\n      alert('파일을 선택하세요.');\n      return;\n    }\n    const token = localStorage.getItem('access_token'); // 토큰 가져오기\n    if (!token) {\n      console.error('Access token not found.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setLoading(true);\n      const csrfToken = getCSRFToken();\n      const response = await axios.post('http://localhost:8000/api/upload-students/', formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          // 요청 시 토큰 추가\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': csrfToken\n        }\n      });\n      console.log('파일 업로드 성공:', response.data);\n      alert('파일 업로드 성공!');\n      fetchStudents(); // 데이터 새로고침\n    } catch (error) {\n      console.error('파일 업로드 실패:', error);\n      alert('파일 업로드 실패. 다시 시도해주세요.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx,.xls\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        disabled: loading,\n        children: loading ? 'Uploading...' : 'Upload Excel'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        marginTop: '20px',\n        width: '100%',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD559\\uBC88\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.student_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this)]\n        }, student.student_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"7zFNRI+kB/lTp6NoKHQ73GpE118=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","getCSRFToken","cookies","document","cookie","split","key","value","trim","Dashboard","_s","students","setStudents","file","setFile","loading","setLoading","fetchStudents","token","localStorage","getItem","console","error","response","get","headers","Authorization","data","alert","handleFileUpload","formData","FormData","append","csrfToken","post","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","type","accept","onChange","e","target","files","onClick","disabled","border","marginTop","width","textAlign","map","student","student_id","name","_c","$RefreshReg$"],"sources":["C:/Users/User/Videos/react/my-app/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst getCSRFToken = () => {\r\n    const cookies = document.cookie.split(';');\r\n    for (let cookie of cookies) {\r\n        const [key, value] = cookie.trim().split('=');\r\n        if (key === 'csrftoken') return value;\r\n    }\r\n    return null;\r\n};\r\nconst Dashboard = () => {\r\n    const [students, setStudents] = useState([]);\r\n    const [file, setFile] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // Fetch student data\r\n    const fetchStudents = async () => {\r\n        const token = localStorage.getItem('access_token'); // 토큰 가져오기\r\n        if (!token) {\r\n            console.error('Access token not found.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.get('http://localhost:8000/api/dashboard/', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`, // 요청 시 토큰 추가\r\n                },\r\n            });\r\n            setStudents(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching students:', error);\r\n            alert('학생 데이터를 불러오는 데 실패했습니다.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchStudents();\r\n    }, []);\r\n\r\n    // Handle file upload\r\n    const handleFileUpload = async () => {\r\n        if (!file) {\r\n            alert('파일을 선택하세요.');\r\n            return;\r\n        }\r\n\r\n        const token = localStorage.getItem('access_token'); // 토큰 가져오기\r\n        if (!token) {\r\n            console.error('Access token not found.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            setLoading(true);\r\n            const csrfToken = getCSRFToken(); \r\n            const response = await axios.post('http://localhost:8000/api/upload-students/', formData, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`, // 요청 시 토큰 추가\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'X-CSRFToken': csrfToken,\r\n                },\r\n            });\r\n            console.log('파일 업로드 성공:', response.data);\r\n            alert('파일 업로드 성공!');\r\n            fetchStudents(); // 데이터 새로고침\r\n        } catch (error) {\r\n            console.error('파일 업로드 실패:', error);\r\n            alert('파일 업로드 실패. 다시 시도해주세요.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Dashboard</h1>\r\n\r\n            {/* File Upload Section */}\r\n            <div style={{ marginBottom: '20px' }}>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\".xlsx,.xls\"\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                />\r\n                <button onClick={handleFileUpload} disabled={loading}>\r\n                    {loading ? 'Uploading...' : 'Upload Excel'}\r\n                </button>\r\n            </div>\r\n\r\n            {/* Student Data Table */}\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <table border=\"1\" style={{ marginTop: '20px', width: '100%', textAlign: 'center' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>학번</th>\r\n                            <th>이름</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {students.map((student) => (\r\n                            <tr key={student.student_id}>\r\n                                <td>{student.student_id}</td>\r\n                                <td>{student.name}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}