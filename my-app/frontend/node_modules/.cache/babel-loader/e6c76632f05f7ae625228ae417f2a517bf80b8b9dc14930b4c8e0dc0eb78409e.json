{"ast":null,"code":"// src/api.js\n\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api/',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\n\n// 회원가입 요청\nexport const handleSignup = async (username, password) => {\n  try {\n    const response = await api.post('accounts/register/', {\n      username,\n      password\n    });\n    console.log('회원가입 성공:', response.data);\n  } catch (error) {\n    console.error('회원가입 실패:', error.response.data);\n  }\n};\n\n// 로그인 요청 (토큰 발급)\nexport const handleLogin = async (username, password) => {\n  try {\n    const response = await api.post('accounts/login/', {\n      username,\n      password\n    });\n    const {\n      access,\n      refresh\n    } = response.data;\n\n    // 토큰 저장 (로컬스토리지)\n    localStorage.setItem('access_token', access);\n    localStorage.setItem('refresh_token', refresh);\n    console.log('로그인 성공:', response.data);\n  } catch (error) {\n    console.error('로그인 실패:', error.response.data);\n  }\n};\nexport const fetchProtectedData = async () => {\n  const token = localStorage.getItem('access_token');\n  try {\n    const response = await api.get('protected-endpoint/', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log('보호된 데이터:', response.data);\n  } catch (error) {\n    console.error('데이터 불러오기 실패:', error.response.data);\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","withCredentials","handleSignup","username","password","response","post","console","log","data","error","handleLogin","access","refresh","localStorage","setItem","fetchProtectedData","token","getItem","get","Authorization"],"sources":["C:/Users/User/Videos/react/my-app/frontend/src/api.js"],"sourcesContent":["// src/api.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8000/api/',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, \r\n});\r\n\r\n// 회원가입 요청\r\nexport const handleSignup = async (username, password) => {\r\n  try {\r\n    const response = await api.post('accounts/register/', { username, password });\r\n    console.log('회원가입 성공:', response.data);\r\n  } catch (error) {\r\n    console.error('회원가입 실패:', error.response.data);\r\n  }\r\n};\r\n\r\n// 로그인 요청 (토큰 발급)\r\nexport const handleLogin = async (username, password) => {\r\n  try {\r\n    const response = await api.post('accounts/login/', { username, password });\r\n    const { access, refresh } = response.data;\r\n\r\n    // 토큰 저장 (로컬스토리지)\r\n    localStorage.setItem('access_token', access);\r\n    localStorage.setItem('refresh_token', refresh);\r\n\r\n    console.log('로그인 성공:', response.data);\r\n  } catch (error) {\r\n    console.error('로그인 실패:', error.response.data);\r\n  }\r\n};\r\n\r\nexport const fetchProtectedData = async () => {\r\n  const token = localStorage.getItem('access_token');\r\n\r\n  try {\r\n    const response = await api.get('protected-endpoint/', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    console.log('보호된 데이터:', response.data);\r\n  } catch (error) {\r\n    console.error('데이터 불러오기 실패:', error.response.data);\r\n  }\r\n};"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,4BAA4B;EACrCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,oBAAoB,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC7EG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAACI,IAAI,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACL,QAAQ,CAACI,IAAI,CAAC;EAChD;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAOR,QAAQ,EAAEC,QAAQ,KAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,iBAAiB,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC1E,MAAM;MAAEQ,MAAM;MAAEC;IAAQ,CAAC,GAAGR,QAAQ,CAACI,IAAI;;IAEzC;IACAK,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,MAAM,CAAC;IAC5CE,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEF,OAAO,CAAC;IAE9CN,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,QAAQ,CAACI,IAAI,CAAC;EACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACL,QAAQ,CAACI,IAAI,CAAC;EAC/C;AACF,CAAC;AAED,OAAO,MAAMO,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,MAAMC,KAAK,GAAGH,YAAY,CAACI,OAAO,CAAC,cAAc,CAAC;EAElD,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMR,GAAG,CAACsB,GAAG,CAAC,qBAAqB,EAAE;MACpDnB,OAAO,EAAE;QACPoB,aAAa,EAAE,UAAUH,KAAK;MAChC;IACF,CAAC,CAAC;IACFV,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAACI,IAAI,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACL,QAAQ,CAACI,IAAI,CAAC;EACpD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}