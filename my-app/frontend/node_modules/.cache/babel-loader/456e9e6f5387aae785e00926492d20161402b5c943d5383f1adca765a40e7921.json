{"ast":null,"code":"import axios from 'axios';\n\n// Axios 인스턴스 생성\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api/',\n  // Django 서버 주소\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // 쿠키 및 인증 정보 포함\n});\n\n// 회원가입 요청\nexport const handleSignup = async (username, password) => {\n  try {\n    const response = await api.post('accounts/register/', {\n      username,\n      password\n    });\n    console.log('회원가입 성공:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('회원가입 실패:', error);\n    throw error;\n  }\n};\n\n// 로그인 요청\nexport const handleLogin = async (username, password) => {\n  try {\n    const response = await api.post('accounts/login/', {\n      username,\n      password\n    });\n    console.log('로그인 성공:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('로그인 실패:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","withCredentials","handleSignup","username","password","response","post","console","log","data","error","handleLogin"],"sources":["C:/Users/User/Videos/react/my-app/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Axios 인스턴스 생성\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8000/api/',  // Django 서버 주소\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true,  // 쿠키 및 인증 정보 포함\r\n});\r\n\r\n// 회원가입 요청\r\nexport const handleSignup = async (username, password) => {\r\n  try {\r\n    const response = await api.post('accounts/register/', { username, password });\r\n    console.log('회원가입 성공:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('회원가입 실패:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 로그인 요청\r\nexport const handleLogin = async (username, password) => {\r\n  try {\r\n    const response = await api.post('accounts/login/', { username, password });\r\n    console.log('로그인 성공:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('로그인 실패:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,4BAA4B;EAAG;EACxCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE,IAAI,CAAG;AAC1B,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,oBAAoB,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC7EG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAACI,IAAI,CAAC;IACtC,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAChC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOR,QAAQ,EAAEC,QAAQ,KAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,iBAAiB,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC1EG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,QAAQ,CAACI,IAAI,CAAC;IACrC,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IAC/B,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}